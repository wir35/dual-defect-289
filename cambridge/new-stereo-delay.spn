; New stereo delay program
; Stereo inputs with separately adjustable delay times up to 500ms.

; There is no digital feedback in this program.
; Use analog feedback on either side.
; Low pass filter on both inputs.
; Unity gain through the delay line.
; The two taps can be modulated, and the delay time changes without artifacts.

; Controls:
; Pot 0: Left tap time
; Pot 1: Right tap time
; Pot 2: Low pass filter cutoff both inputs

; Memory declarations

  MEM tap1 1
  MEM tap2 1
  MEM tap3 1
  MEM tap4 1
  MEM del1 16379
  MEM del2 16379

; Constants

  EQU full_scale   32767 * 256 ; 0x7FFF00

; Registers and intermediate nodes

  EQU temp_acc     reg1  ; Temporary accumulator register
  EQU new_time_l   reg2  ; New delay tap time when moved by pot
  EQU new_time_r   reg3  ; New delay tap time when moved by pot
  EQU tap_time1    reg4  ; Tap 1 time sample and hold
  EQU tap_time2    reg5  ; Tap 2 time sample and hold
  EQU tap_time3    reg6  ; Tap 1 time sample and hold
  EQU tap_time4    reg7  ; Tap 2 time sample and hold
  EQU tap1_mul     reg8  ; Cross fade level for tap 1
  EQU tap2_mul     reg9  ; Cross fade level for tap 2
  EQU tap3_mul     reg10 ; Cross fade level for tap 3
  EQU tap4_mul     reg11 ; Cross fade level for tap 4
  EQU lpf_l        reg13 ; Low pass on right input
  EQU lpf_r        reg14 ; Low pass on right input
  EQU lpf_freq     reg15 ; Low pass cutoff set by pot2
  EQU pot0_filt    reg16 ; Filter for pot0
  EQU pot0_fast    reg17 ; Faster resolving pot0 value
  EQU pot1_filt    reg18 ; Filter for pot1
  EQU pot1_fast    reg19 ; Faster resolving pot1 value

; Init program

  SKP	 run, loop
  WLDS sin0, 1, 32767   ; For the left cross fade signal
  WLDS sin1, 1, 32767   ; For the right cross fade signal

loop:

; Set desired new tap times
; Minimum delay time = 50ms ~ 0.05 in deci ~ 20 Hz ~ 0.9817 lfo
; Maximum delay time = 500ms ~ 0.5 in deci ~ 2 Hz ~ 0.09817 lfo ; 0.049

set_new_time_l:

  RDAX pot0, 1.0          ; Load
  RDFX pot0_filt,  0.001  ; Speed the pot up
  WRHX pot0_filt, -0.75
  RDAX pot0_fast,  0.75
  WRAX pot0_fast,  1.00

  SOF  0.45, 0.05         ; Scale to the space of del1
  WRAX new_time_l, 1.0    ; Store

  SOF  -0.89, 0.9817      ; Scale so 1 period of lfo == delay time
  WRAX SIN0_RATE, 0.0     ; Write

set_new_time_r:

  RDAX pot1, 1.0          ; Load
  RDFX pot1_filt,  0.001  ; Speed the pot up
  WRHX pot1_filt, -0.75
  RDAX pot1_fast,  0.75
  WRAX pot1_fast,  1.00

  SOF  0.45, 0.55         ; Scale to the space of del2
  WRAX new_time_r, 1.0    ; Store

  SOF  -0.89, 0.9817      ; Scale so 1 period of lfo == delay time
  WRAX SIN1_RATE, 0.0     ; Scale lfo1 rate

calc_lfo0_xfade:

  CHO RDAL, sin0          ; Read sin0 value
  SOF 0.5, 0.5            ; Scale lfo (-1 to 1) to 0 to 1
  WRAX tap1_mul, 1.0      ; The tap 1 level stored in tap1_mul
  SOF -1.0, 0.999         ; Invert the lfo for the other side of the xfade
  WRAX tap2_mul, 0.0      ; The tap 2 level stored in tap2_mul

calc_lfo1_xfade:

  CHO RDAL, sin1          ; Read sin0 value
  SOF 0.5, 0.5            ; Scale lfo (-1 to 1) to 0 to 1
  WRAX tap3_mul, 1.0      ; The tap 3 level stored in tap3_mul
  SOF -1.0, 0.999         ; Invert the lfo for the other side of the xfade
  WRAX tap4_mul, 0.0      ; The tap 4 level stored in tap4_mul

; Update the tap times when the xfade level is low,
; otherwise skip and leave the tap where it is.

check_tap_1:
  LDAX tap1_mul
  SOF  1.0, -0.001
  SKP  GEZ, check_tap_2

update_tap_1:
  LDAX new_time_l
  WRAX tap_time1, 0.0

check_tap_2:
  LDAX tap2_mul
  SOF 1.0, -0.001
  SKP GEZ, check_tap_3

update_tap_2:
  LDAX new_time_l
  WRAX tap_time2, 0.0

check_tap_3:
  LDAX tap3_mul
  SOF  1.0, -0.001
  SKP  GEZ, check_tap_4

update_tap_3:
  LDAX new_time_r
  WRAX tap_time3, 0.0

check_tap_4:
  LDAX tap4_mul
  SOF 1.0, -0.001
  SKP GEZ, taps_done

update_tap_4:
  LDAX new_time_r
  WRAX tap_time4, 0.0

taps_done:

  CLR

; Output taps

read_tap_1:

  OR   full_scale          ; Load ACC with 0x7FFF00
  MULX tap_time1           ; Scale by the tap position
  WRAX addr_ptr, 0         ; Set addr_ptr register for tap time
  RMPA 1.0                 ; Read delay memory
  MULX tap1_mul            ; Scale amplitude for xfade curve
  WRA  tap1, 0.0           ; Write

read_tap_2:

  OR   full_scale          ; Load ACC with 0x7FFF00
  MULX tap_time2           ; Scale by the tap position
  WRAX addr_ptr, 0         ; Set addr_ptr register for tap time
  RMPA 1.0                 ; Read delay memory
  MULX tap2_mul            ; Scale amplitude for xfade curve
  WRA tap2, 0.0            ; Write

read_tap_3:

  OR   full_scale          ; Load ACC with 0x7FFF00
  MULX tap_time3           ; Scale by the tap position
  WRAX addr_ptr, 0         ; Set addr_ptr register for tap time
  RMPA 1.0                 ; Read delay memory
  MULX tap3_mul            ; Scale amplitude for xfade curve
  WRA tap3, 0.0            ; Write

read_tap_4:

  OR   full_scale          ; Load ACC with 0x7FFF00
  MULX tap_time4           ; Scale by the tap position
  WRAX addr_ptr, 0         ; Set addr_ptr register for tap time
  RMPA 1.0                 ; Read delay memory
  MULX tap4_mul            ; Scale amplitude for xfade curve
  WRA tap4, 0.0            ; Write

combine_left_output:

  RDA  tap1, 1.0
  RDA  tap2, 1.0
  WRAX dacl, 0.0           ; Write to dac left output

combine_right_output:

  RDA  tap3,  1.0
  RDA  tap4,  1.0
  WRAX dacr,  0.0          ; Write to dac right output

; Inputs

calc_lpf_freq:

  RDAX pot2, 1.0           ; Load pot2
  MULX pot2                ; Square it
  SOF 0.5, 0.0             ; Scale
  WRAX lpf_freq, 0.0       ; Write

; Left input and write to del1

  RDAX adcl, 1.0           ; Read left input
  RDAX lpf_l, -1.0
  MULX lpf_freq            ; Sweep lpf cutoff by pot2
  RDAX lpf_l, 1.0
  WRAX lpf_l, 1.0
  WRA  del1, 0.0           ; Write to delay memory

; Right input and write to del2

  RDAX adcr, 1.0           ; Read left input
  RDAX lpf_r, -1.0
  MULX lpf_freq            ; Sweep lpf cutoff by pot2
  RDAX lpf_r, 1.0
  WRAX lpf_r, 1.0
  WRA  del2, 0.0           ; Write to delay memory
