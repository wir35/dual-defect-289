; Long delay program
; Summed mono input with separately adjustable left and right taps.

; There is no digital feedback in this program.
; Use analog feedback, preferably to the right side.
; Left side: delay input, right side: feedback input.
; Low pass filter only on right input.
; Unity gain through the delay line.
; The two taps can be modulated, but the read is not interpolated so it is noisy.

; Controls:
; Pot 0: Left tap time
; Pot 1: Right tap time
; Pot 2: Low pass filter cutoff on the right (feedback) input.

; Use all the delay memory for one delay line

  MEM del1 32767

; Constants

  EQU smooth       0.001       ; Pot 0 and 1 low pass smoothing filter
  EQU full_scale   32767 * 256 ; 0x7FFF00
  EQU make_up_gain -1.414      ; 2x
  EQU input_gain   0.5

; Registers and intermediate nodes

  EQU scaled_pot0      reg1  ;  Left pre-delay control
  EQU scaled_pot1      reg2  ;  Right pre-delay control
  EQU scaled_pot2      reg3  ;  Right pre-delay control
  EQU lpf              reg4  ;  Input low pass

; Init program

  SKP	run, loop
  WLDR rmp0, 0, 4096        ; Ramp for servo pre-delay left
  WLDR rmp1, 0, 4096        ; Ramp for servo pre-delay right
  CLR                       ; Clear state registers
  WRAX scaled_pot0, 0.0
  WRAX scaled_pot1, 0.0

loop:

; Left tap time set by pot0
  RDAX pot0, 1.0            ; Load pot0
  RDFX scaled_pot0, smooth  ; Low pass smooth it
  WRAX scaled_pot0, 0.0     ; Save scaled pot, clear ACC

; Right tap time by pot1
  RDAX pot1, 1.0            ; Load pot1
  RDFX scaled_pot1, smooth  ; Low pass smooth it
  WRAX scaled_pot1, 0.0     ; Save scaled pot, clear ACC

; LPF freq set by pot2
  RDAX pot2, 1.0            ; Load pot2
  MULX pot2                 ; Square it
  SOF 0.5, 0.0              ; Scale
  WRAX scaled_pot2, 0.0     ; Save it, clear ACC

; Right input (feedback) with low pass filter

  RDAX adcr, input_gain     ; Read right input
  RDAX lpf, -1.0
  MULX scaled_pot2          ; Sweep lpf cutoff by pot2
  RDAX lpf, 1.0
  WRAX lpf, 1.0             ; Leave it in the ACC

; Add left input (un-effected) and write the mix to delay head

  RDAX adcl, input_gain
  WRA del1, 0.0

; Left output, delay tap time swept by pot 0

  OR   full_scale          ; Load ACC with 0x7FFF00
  MULX scaled_pot0         ; Scale by the smoothed pot0 value
  WRAX addr_ptr, 0         ; Set addr_ptr register for tap time
	RMPA 1.0                 ; Read delay memory
  SOF make_up_gain, 0.0    ; Scale for make-up gain
  SOF make_up_gain, 0.0
  WRAX dacl, 0.0           ; Write to dac left output

; Right output, delay tap time swept by pot 1

  OR   full_scale
  MULX scaled_pot1
  WRAX addr_ptr, 0
  RMPA 1.0
  SOF make_up_gain, 0.0
  SOF make_up_gain, 0.0
  WRAX dacr, 0.0
