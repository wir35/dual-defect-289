; New delay program
; Summed mono input with separately adjustable left and right taps.
; Knob changes powers of 2 delay times. Use clock speed to fine tune delay time.

; There is no digital feedback in this program.
; Use analog feedback, on either side.
; Left side: delay input, right side: feedback input.
; Low pass filter only on right input.
; Unity gain through the delay line.
; The two taps can be modulated, and the delay time changes without artifacts.

; Controls:
; Pot 0: Left tap time
; Pot 1: Right tap time
; Pot 2: Micro-shift tap times: positive right, negative left

; Memory declarations

  MEM tap1 1
  MEM tap2 1
  MEM tap3 1
  MEM tap4 1
  MEM del1 32758

; Constants

  EQU full_scale   32767 * 256 ; 0x7FFF00

; Registers and intermediate nodes

  EQU temp_acc     reg1  ; Temporary accumulator register
  EQU new_time_l   reg2  ; New delay tap time when moved by pot
  EQU new_time_r   reg3  ; New delay tap time when moved by pot
  EQU tap_time1    reg4  ; Tap 1 time sample and hold
  EQU tap_time2    reg5  ; Tap 2 time sample and hold
  EQU tap_time3    reg6  ; Tap 1 time sample and hold
  EQU tap_time4    reg7  ; Tap 2 time sample and hold
  EQU tap1_mul     reg8  ; Cross fade level for tap 1
  EQU tap2_mul     reg9  ; Cross fade level for tap 2
  EQU tap3_mul     reg10 ; Cross fade level for tap 3
  EQU tap4_mul     reg11 ; Cross fade level for tap 4
  EQU micro_time   reg12 ; Micro-shift times

; Init program

  SKP	 run, loop
  WLDS sin0, 1, 32767   ; For the left cross fade signal
  WLDS sin1, 1, 32767   ; For the right cross fade signal

loop:

; Set desired new tap times
; Minimum delay time = 50ms ~ 0.05 in deci ~ 20 Hz ~ 0.9817 lfo
; Maximum delay time = 1s ~ 1.0 in deci ~ 1 Hz ~ 0.049 lfo

set_new_time_l:

  LDAX pot0               ; Load
  SOF  0.75, 0.15         ; Constrain to powers of 2 times
  LOG	 1.999, 0.0
  AND  %11111100_00000000_00000000
  EXP	 1.999, 0.0
  WRAX new_time_l, 1.0    ; Store

  SOF  -0.2, 0.9817       ; Scale
  WRAX SIN0_RATE, 0.0     ; Write

set_new_time_r:

  LDAX pot1               ; Load
  SOF  0.75, 0.15         ; Constrain to powers of 2 times
  LOG	 1.999, 0.0
  AND  %11111100_00000000_00000000
  EXP	 1.999, 0.0
  WRAX new_time_r, 1.0    ; Store

  SOF  -0.2, 0.9817       ; Scale
  WRAX SIN1_RATE, 0.0     ; Scale lfo1 rate

set_micro_time:

  LDAX pot2                 ; Load pot2
  SOF 0.01, 0.0             ; Scale
  RDAX micro_time, 0.0001   ; Smooth
  WRAX micro_time, 0.0

calc_lfo0_xfade:

  CHO RDAL, sin0          ; Read sin0 value
  SOF 0.5, 0.5            ; Scale lfo (-1 to 1) to 0 to 1
  WRAX tap1_mul, 1.0      ; The tap 1 level stored in tap1_mul
  SOF -1.0, 0.999         ; Invert the lfo for the other side of the xfade
  WRAX tap2_mul, 0.0      ; The tap 2 level stored in tap2_mul

calc_lfo1_xfade:

  CHO RDAL, sin1          ; Read sin0 value
  SOF 0.5, 0.5            ; Scale lfo (-1 to 1) to 0 to 1
  WRAX tap3_mul, 1.0      ; The tap 1 level stored in tap1_mul
  SOF -1.0, 0.999         ; Invert the lfo for the other side of the xfade
  WRAX tap4_mul, 0.0      ; The tap 2 level stored in tap2_mul

; Update the tap times when the xfade level is low,
; otherwise skip and leave the tap where it is.

check_tap_1:
  LDAX tap1_mul
  SOF  1.0, -0.001
  SKP  GEZ, check_tap_2

update_tap_1:
  LDAX new_time_l
  WRAX tap_time1, 0.0

check_tap_2:
  LDAX tap2_mul
  SOF 1.0, -0.001
  SKP GEZ, check_tap_3

update_tap_2:
  LDAX new_time_l
  WRAX tap_time2, 0.0

check_tap_3:
  LDAX tap3_mul
  SOF  1.0, -0.001
  SKP  GEZ, check_tap_4

update_tap_3:
  LDAX new_time_r
  WRAX tap_time3, 0.0

check_tap_4:
  LDAX tap4_mul
  SOF 1.0, -0.001
  SKP GEZ, taps_done

update_tap_4:
  LDAX new_time_r
  WRAX tap_time4, 0.0

taps_done:

  CLR

; Output taps

read_tap_1:

  OR   full_scale          ; Load ACC with 0x7FFF00
  MULX tap_time1           ; Scale by the tap position
  RDAX micro_time, 1.0     ; Positive shift by micro time
  WRAX addr_ptr, 0         ; Set addr_ptr register for tap time
  RMPA 1.0                 ; Read delay memory
  MULX tap1_mul            ; Scale amplitude for xfade curve
  WRA  tap1, 0.0           ; Write

read_tap_2:

  OR   full_scale          ; Load ACC with 0x7FFF00
  MULX tap_time2           ; Scale by the tap position
  RDAX micro_time, 1.0     ; Positive shift by micro time
  WRAX addr_ptr, 0         ; Set addr_ptr register for tap time
  RMPA 1.0                 ; Read delay memory
  MULX tap2_mul            ; Scale amplitude for xfade curve
  WRA tap2, 0.0            ; Write

read_tap_3:

  OR   full_scale          ; Load ACC with 0x7FFF00
  MULX tap_time3           ; Scale by the tap position
  RDAX micro_time, -1.0    ; Negative shift by micro time
  WRAX addr_ptr, 0         ; Set addr_ptr register for tap time
  RMPA 1.0                 ; Read delay memory
  MULX tap3_mul            ; Scale amplitude for xfade curve
  WRA tap3, 0.0            ; Write

read_tap_4:

  OR   full_scale          ; Load ACC with 0x7FFF00
  MULX tap_time4           ; Scale by the tap position
  RDAX micro_time, -1.0    ; Negative shift by micro time
  WRAX addr_ptr, 0         ; Set addr_ptr register for tap time
  RMPA 1.0                 ; Read delay memory
  MULX tap4_mul            ; Scale amplitude for xfade curve
  WRA tap4, 0.0            ; Write

combine_left_output:

  RDA  tap1, 1.0
  RDA  tap2, 1.0
  WRAX dacl, 0.0           ; Write to dac left output

combine_right_output:

  RDA  tap3,  1.0
  RDA  tap4,  1.0
  WRAX dacr,  0.0          ; Write to dac right output

; Input

sum_inputs_to_delay:

  RDAX adcr, 1.0           ; Read right input
  RDAX adcl, 1.0           ; Add left input
  WRA del1, 0.0            ; Write to delay memory
